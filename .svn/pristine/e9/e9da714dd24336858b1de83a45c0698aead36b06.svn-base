package com.huashidai.weihuotong.app;

/**
 * 商品相关的接口
 */
import java.io.IOException;
import java.math.BigDecimal;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import com.huashidai.weihuotong.domain.DetailsImage;
import com.huashidai.weihuotong.domain.Goods;
import com.huashidai.weihuotong.domain.paramList.ProductList;
import com.huashidai.weihuotong.domain.paramList.ProductOrderItemList;
import com.huashidai.weihuotong.exception.LogicException;
import com.huashidai.weihuotong.query.GoodsQuery;
import com.huashidai.weihuotong.service.IDetailsImageService;
import com.huashidai.weihuotong.service.IGoodsService;
import com.huashidai.weihuotong.service.IProductOrderService;
import com.huashidai.weihuotong.utils.AppResult;

@Controller
@RequestMapping("/app")
public class GoodsAPP {
	@Autowired
	private IGoodsService goodsService;
	@Autowired
	private IDetailsImageService detailsImageService;
	@Autowired
	private IProductOrderService productOrderService; 
	
	/**
	 * 搜索商品
	 * @param searchKey
	 * @return
	 */
	@RequestMapping("/searchGoods")
	@ResponseBody
	public AppResult searchGoods(String goodsName){
		
		AppResult appResult = null;
		try{
			GoodsQuery goodsQuery = new GoodsQuery();
			goodsQuery.setGoodsName(goodsName);
			goodsQuery.setState(1);
			Map<String, Object> map = goodsService.searchGoods(goodsQuery);
			// 封装响应信息
			appResult = new AppResult(map);
		}catch(LogicException e){
			// 封装响应信息
			appResult = new AppResult();
		}
		return appResult;
	}

	/**
	 * 新增商品
	 * @param goodsId
	 * @return
	 * @throws IOException 
	 */
	@RequestMapping("/saveGoods")
	@ResponseBody
	public AppResult saveGoods(
		@RequestParam("bannerImage")  MultipartFile[] bannerImage,
		@RequestParam("detailsImage") MultipartFile[] detailsImage,
		ProductList products,Goods goods) throws IOException {
		AppResult appResult = null;
		try {
			goodsService.saveGoods(bannerImage,detailsImage,products,goods);
			appResult = new AppResult(null);
		} catch (LogicException e) {
			appResult = new AppResult(e.getMessage(), e.getErrorCode());
		}
		return appResult;
	}
	/**
	 * 点击进入商品
	 * 
	 * @param goodsId
	 * @return
	 */
	@RequestMapping("/enterGoods")
	@ResponseBody
	public AppResult enterGoods(Long goodsId) {
		
		AppResult appResult = null;
		try {
			Map<String, Object> data = goodsService.enterGoods(goodsId);
			appResult = new AppResult(data);
		} catch (LogicException e) {
			appResult = new AppResult(e.getMessage(), e.getErrorCode());
		}
		return appResult;
	}

	/**
	 * 进入商品图文详情(网页)
	 * 
	 * @param goodsId
	 * @return
	 */
	@RequestMapping("/detailsImages")
	public ModelAndView detailsImages(Long goodsId) {
		List<DetailsImage> images = detailsImageService.getByGoods(goodsId);
		ModelAndView modelAndView = new ModelAndView();
		modelAndView.addObject("images", images);
		modelAndView.setViewName("/app/goodsWebpage");
		return modelAndView;
	}

	/**
	 * 代理商品(转发)
	 * 
	 * @param goodsId
	 * @return
	 */
	@RequestMapping("/proxyGoods")
	@ResponseBody
	public AppResult proxyGoods(Long goodsId, BigDecimal price, String details,
			Long userId) {
		AppResult appResult = null;
		try {
			goodsService.proxyGoods(goodsId, price, details, userId);
			appResult = new AppResult(null);
		} catch (Exception e) {
			appResult = new AppResult("转发失败!", null);
		}
		return appResult;
	}

	/**
	 * 进入采购进货页面
	 * 
	 * @param goodsId
	 * @return
	 */
	@RequestMapping("/toBuyProduct")
	@ResponseBody
	public AppResult toBuyProduct(Long goodsId) {
		AppResult appResult = null;
		try {
			List<Object> products = goodsService.toBuyProduct(goodsId);
			appResult = new AppResult(products);
		} catch (Exception e) {
			appResult = new AppResult();
		}
		return appResult;
	}

	/**
	 * 获取更多商品
	 * 
	 * @param goodsQuery
	 *            查询条件
	 * @return
	 */
	@RequestMapping("/queryGoods")
	@ResponseBody
	public AppResult queryGoods(GoodsQuery goodsQuery) {

		AppResult appResult = null;
		try {
			Map<String, Object> goods = goodsService.queryMap(goodsQuery);
			appResult = new AppResult(goods);
		} catch (LogicException e) {
			appResult = new AppResult();
		}
		return appResult;
	}

	/**
	 * 获取最新商品
	 * 
	 * @param storeId
	 *            店铺id(进入新品专区时不需要)
	 * @return
	 */
	@RequestMapping("/newGoods")
	@ResponseBody
	public AppResult newGoods(Long storeId) {

		AppResult appResult = null;
		try {
			Map<String, Object> newGoods = goodsService.newGoods(storeId);
			appResult = new AppResult(newGoods);
		} catch (LogicException e) {
			appResult = new AppResult();
		}
		return appResult;
	}


	/**
	 * 提交订单
	 * 
	 * @return
	 */
//	@RequestMapping("/submitOrder")
//	@ResponseBody
//	public AppResult submitOrder(@RequestBody List<Map<String, String>> maps) {
//		AppResult appResult = null;
//		try {
//			Map<String, Object> submitOrder = productOrderService.submitOrder(maps);
//			appResult = new AppResult(submitOrder);
//		} catch (LogicException e) {
//			appResult = new AppResult();
//		}
//		return appResult;
//	}
	@RequestMapping("/submitOrder")
	@ResponseBody
	public AppResult submitOrder(ProductOrderItemList items,Long userId,Long addressId) {
		AppResult appResult = null;
		try {
			Map<String, Object> submitOrder = productOrderService.submitOrder(items,userId,addressId);
			appResult = new AppResult(submitOrder);
		} catch (LogicException e) {
			appResult = new AppResult();
		}
		return appResult;
	}

}
