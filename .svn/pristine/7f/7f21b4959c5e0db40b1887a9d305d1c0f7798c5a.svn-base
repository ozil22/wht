package com.huashidai.weihuotong.app;
/**
 * 商品相关的接口
 */
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import com.huashidai.weihuotong.domain.Article;
import com.huashidai.weihuotong.domain.ArticleComment;
import com.huashidai.weihuotong.exception.LogicException;
import com.huashidai.weihuotong.query.ArticleCommentQuery;
import com.huashidai.weihuotong.query.ArticleQuery;
import com.huashidai.weihuotong.service.IArticleCommentService;
import com.huashidai.weihuotong.service.IArticleService;
import com.huashidai.weihuotong.service.IArticleTypeService;
import com.huashidai.weihuotong.utils.AppResult;

@Controller
@RequestMapping("/app")
public class ArticleAPP {
	@Autowired
	private IArticleService articleService;
	@Autowired
	private IArticleCommentService articleCommentService;
	@Autowired
	private IArticleTypeService articleTypeService;
	
	/**
	 * 文章查询
	 * @param qu 
	 * @return
	 */
	@RequestMapping("/queryArticle")
	@ResponseBody
	public AppResult queryArticle(ArticleQuery qu){
		
		AppResult appResult = null;
		try{
			Map<String, Object> map = articleService.queryMap(qu);
			appResult = new AppResult(map);
		}catch(Exception e){
			appResult = new AppResult();
		}
		return appResult;
	}
	/**
	 * 文章内容
	 * @param qu 
	 * @return
	 */
	@RequestMapping("/enterArticle")
	public ModelAndView enterArticle(Long articleId){
			Article a = articleService.get(articleId);
			ModelAndView modelAndView = new ModelAndView();
			modelAndView.addObject("articleImages", a.getArticleImages());
			modelAndView.addObject("content", a.getContent());
			modelAndView.addObject("name", a.getName());
			modelAndView.addObject("time", new SimpleDateFormat("yyyy-MM-dd hh:mm:ss").format( a.getTime()));
			modelAndView.addObject("commentNum", a.getCommentNum());
			modelAndView.setViewName("/app/article");
			return modelAndView;
	}
	/**
	 * 文章评论
	 * @param qu 
	 * @param qu 
	 * @return
	 */
	@RequestMapping("/queryComment")
	@ResponseBody
	public AppResult queryComment(ArticleCommentQuery qu){
		AppResult appResult = null;
		try{
			Map<String, Object> map = articleCommentService.queryMap(qu);
			appResult = new AppResult(map);
		}catch(Exception e){
			appResult = new AppResult();
		}
		return appResult;
	}
	/**
	 * 所有分类
	 * @return
	 */
	@RequestMapping("/articleType")
	@ResponseBody
	public AppResult articleType(){
		
		AppResult appResult = null;
		try{
			List<Object> all = articleTypeService.getAll();
			appResult = new AppResult(all);
		}catch(Exception e){
			e.printStackTrace();
			appResult = new AppResult();
		}
		return appResult;
	}
	/**
	 * 发布文章
	 * @param qu 
	 * @return
	 */
	@RequestMapping("/addArticle")
	@ResponseBody
	public AppResult addArticle(@RequestParam("file")  MultipartFile[] file,Article article){
		
		AppResult appResult = null;
		try{
			articleService.addArticle(file, article);
			appResult = new AppResult(null);
		}catch(Exception e){
			e.printStackTrace();
			appResult = new AppResult();
		}
		return appResult;
	}
	/**
	 * 删除文章
	 * @param qu 
	 * @return
	 */
	@RequestMapping("/removeArticle")
	@ResponseBody
	public AppResult removeArticle(Long articleId,Long storeId){
		AppResult appResult = null;
		try{
			articleService.removeArticle(articleId,storeId);
			appResult = new AppResult(null);
		}catch(LogicException e){
			appResult = new AppResult(e.getMessage(), e.getErrorCode());
		}
		return appResult;
	}
	/**
	 * 评论文章
	 * @param qu 
	 * @return
	 */
	@RequestMapping("/commentArticle")
	@ResponseBody
	public AppResult articleComment(ArticleComment articleComment){
		AppResult appResult = null;
		try{
			articleCommentService.commentArticle(articleComment);
			appResult = new AppResult(null);
		}catch(Exception e){
			e.printStackTrace();
			appResult = new AppResult();
		}
		return appResult;
	}

}
