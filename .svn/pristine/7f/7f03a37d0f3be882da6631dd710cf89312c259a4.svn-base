package com.huashidai.weihuotong.service.impl;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.huashidai.weihuotong.domain.AdPositionId;
import com.huashidai.weihuotong.domain.Promotion;
import com.huashidai.weihuotong.domain.Type;
import com.huashidai.weihuotong.domain.Webpage;
import com.huashidai.weihuotong.mapper.GoodsMapper;
import com.huashidai.weihuotong.mapper.PromotionMapper;
import com.huashidai.weihuotong.mapper.TypeMapper;
import com.huashidai.weihuotong.mapper.WebpageMapper;
import com.huashidai.weihuotong.query.AdPositionIdQuery;
import com.huashidai.weihuotong.query.GoodsQuery;
import com.huashidai.weihuotong.query.PageResult;
import com.huashidai.weihuotong.service.IAdPositionIdService;
import com.huashidai.weihuotong.service.IGoodsService;
import com.huashidai.weihuotong.service.IPromotionService;
import com.huashidai.weihuotong.service.IStoreService;
import com.huashidai.weihuotong.utils.ConstUtil;

@Service
public class PromotionServiceImpl implements IPromotionService {

	@Autowired
	PromotionMapper promotionMapper;
	@Autowired
	GoodsMapper goodsMapper;
	@Autowired
	TypeMapper typeMapper;
	@Autowired
	WebpageMapper webpageMapper; 
	@Autowired
	IAdPositionIdService adPositionIdService;
	@Autowired
	IGoodsService goodsService;
	@Autowired
	IStoreService storeService;

	@Override
	public List<Object> getBanner(Long goodsTypeId) {
		List<Promotion> promotions = promotionMapper.getByAdAndGoods(
				ConstUtil.ADTYPE_BANNER, goodsTypeId);
		ArrayList<Object> banners = new ArrayList<Object>();
		for (Promotion promotion : promotions) {
			Map<String, Object> banner = new HashMap<String, Object>();
			banner.put("promotionId", promotion.getId());
			banner.put("image", promotion.getImage());
			banners.add(banner);
		}
		return banners;
	}

	@Override
	public List<Map<String, Object>> getByGoodsType(Long goodsTypeId, int size,
			int page) {
		List<Map<String, Object>> pros = new ArrayList<Map<String, Object>>();
		AdPositionIdQuery qu = new AdPositionIdQuery(
				ConstUtil.ADTYPE_NOTBANNER, goodsTypeId, size, page);
		// 分页获取广告位
		PageResult<AdPositionId> result = adPositionIdService.query(qu);
		for (AdPositionId adPositionId : result.getRows()) {
			Promotion promotion = promotionMapper.getByAd(adPositionId.getId());
			if (promotion == null) {
				pros.add(null);
			} else {
				Map<String, Object> pro = new HashMap<String, Object>();
				pro.put("promotionId", promotion.getId());
				pro.put("image", promotion.getImage());
				pro.put("contentType", promotion.getContentType());
				pros.add(pro);
			}
		}
		return pros;
	}

	@Override
	public List<Map<String, Object>> getTypeAndAd(int size, int page) {
		List<Map<String, Object>> typeAndAds = new ArrayList<Map<String, Object>>();
		List<Type> types = typeMapper.getByParent(null);
		types = types.subList((page - 1) * 3, page * 3);
		for (Type type : types) {
			Map<String, Object> typeAndAd = new HashMap<String, Object>();
			List<Map<String, Object>> byGoodsType = getByGoodsType(
					type.getId(), 3, 1);
			typeAndAd.put("goodsTypeId", type.getId());
			typeAndAd.put("goodsType", type.getName());
			typeAndAd.put("promotions", byGoodsType);
			typeAndAds.add(typeAndAd);
		}
		return typeAndAds;
	}

	@Override
	public Map<String, Object> enterPromotion(Long promotionId) {
			Map<String, Object> data = null;
			Promotion promotion = promotionMapper.get(promotionId);
			Integer cotentType = promotion.getContentType();
			Long cotentId = promotion.getContentId();
			if (cotentType == Promotion.COTENTTYPE_GOODS) {
				data = goodsService.enterGoods(cotentId);
			} else if (cotentType == Promotion.COTENTTYPE_STORE) {
				GoodsQuery goodsQuery = new GoodsQuery();
				goodsQuery.setStoreId(cotentId);
				goodsQuery.setState(1);
				data = storeService.enterStore(goodsQuery);
			}
		return data;
	}

	@Override
	public String getContent(Long promotionId) {
		Promotion promotion = promotionMapper.get(promotionId);
		Long cotentId = promotion.getContentId();
		Webpage webpage = webpageMapper.get(cotentId);
		return webpage.getContent();
	}

}
