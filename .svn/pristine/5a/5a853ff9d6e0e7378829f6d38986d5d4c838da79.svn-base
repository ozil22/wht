package com.huashidai.weihuotong.controller;

import java.io.IOException;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.huashidai.weihuotong.domain.Type;
import com.huashidai.weihuotong.exception.LogicException;
import com.huashidai.weihuotong.query.PageResult;
import com.huashidai.weihuotong.query.TypeQuery;
import com.huashidai.weihuotong.service.ITypeService;
import com.huashidai.weihuotong.utils.AjaxResult;
import com.huashidai.weihuotong.utils.MethodAnnotation;
import com.huashidai.weihuotong.utils.MethodAnnotation.ResourceType;

@Controller
@RequestMapping("/type")
public class TypeCotroller {

	@Autowired
	ITypeService typeService;

	/**
	 * 在菜单栏中点击用户管理的之后,进入到这个页面的跳转
	 * 
	 * @return
	 */
	@MethodAnnotation(name = "分类主页", type = ResourceType.商品管理)
	@RequestMapping("/index")
	public String type() {
		return "goods/type";
	}

	/**
	 * 高级查询+分页
	 * 
	 * @param req
	 * @return
	 */
	@MethodAnnotation(name = "分类列表", type = ResourceType.商品管理)
	@RequestMapping("/query")
	@ResponseBody
	public PageResult<Type> query(TypeQuery qu) {
		PageResult<Type> list = typeService.query(qu);
		return list;
	}

	/**
	 * 查询所有
	 * 
	 * @param req
	 * @return
	 */
	@RequestMapping("/list")
	@ResponseBody
	public List<Type> list(Long parentId) {
		List<Type> list = typeService.getByParent(parentId);
		return list;
	}

	/**
	 * 删除
	 * 
	 * @param id
	 *            商品id
	 * @return
	 */
	@MethodAnnotation(name = "删除分类", type = ResourceType.商品管理)
	@RequestMapping("/delete")
	@ResponseBody
	public AjaxResult delete(Long id) {
		AjaxResult ar;
		try {
			typeService.delete(id);

			ar = new AjaxResult("分类删除成功！！");
		} catch (LogicException e) {

			ar = new AjaxResult(e.getMessage(), e.getErrorCode());
		}
		return ar;
	}

	/**
	 * 
	 * 添加和修改
	 */
	@MethodAnnotation(name = "添加分类", type = ResourceType.商品管理)
	@RequestMapping("/save")
	@ResponseBody
	public AjaxResult save(@RequestParam("typeImage") MultipartFile typeImage, Type type)
			throws IOException {
		AjaxResult ar;
		try {
			// 判断是新建还是更新
			if (type != null && type.getId() != null) {
				typeService.update(typeImage, type);
				ar = new AjaxResult("修改成功！！");
			} else {
				typeService.save(typeImage, type);
				ar = new AjaxResult("分类添加成功！！");
			}
		} catch (Exception e) {
			ar = new AjaxResult("分类添加失败！！", null);
		}
		return ar;
	}
}
