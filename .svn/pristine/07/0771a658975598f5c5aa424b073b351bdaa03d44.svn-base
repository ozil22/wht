<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huashidai.weihuotong.mapper.EmployeeMapper">

	<insert id="save" parameterType="Employee" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
		insert into t_employee(username,realName,password,state) 
					values(#{username},#{realName},#{password},#{state})
	</insert>
	
	<!-- 保存中间表 -->
	<insert id="saveEmployeeRoleLink" parameterType="arraylist">
		insert into t_employee_role(employee_id,role_id)
		                     values
		                     <foreach collection="list" item="item" separator=",">
		                     	(#{item.employee_id},#{item.role_id})
		                     </foreach>
	</insert>
	
	<!-- 删除中间表 -->
	<delete id="deleteEmployeeRoleLink" parameterType="long">
		delete from t_employee_role where employee_id=#{id}
	</delete>
	
	<update id="update" parameterType="Employee">
		update t_employee set 
		username=#{username},
		realName=#{realName},
		state=#{state}
		where id = #{id}
	</update>
	
	<delete id="delete" parameterType="long">
		delete from t_employee where id = #{id}
	</delete>
	
	<select id="get" resultType="Employee">
		select * from t_employee
		where id=#{id}
	</select>
	
	<resultMap type="Employee" id="Emp">
		<id property="id" column="id"/>
		<result property="username" column="username"/>
		<result property="realName" column="realName"/>
		<result property="password" column="password"/>
		<result property="loginTime" column="loginTime"/>
		<result property="state" column="state"/>
		<collection property="roles" javaType="arraylist" ofType="Role">			
			<id property="id" column="rid"/>
			<result property="name" column="rname"/>
		</collection>
	</resultMap>
	
	<select id="getAll" resultMap="Emp">
		select emp.*,r.id rid,r.name rname 
		from t_employee emp
		left join t_employee_role er  on(emp.id=er.employee_id)
		left join t_role r on(er.role_id=r.id)
	</select>
	
		<!-- 公共的高级查询条件 -->
	<sql id="whereSql">
		<where>
			<if test="employeeName!=null and employeeName!=''">
				(emp.username like concat('%',#{employeeName},'%') or emp.realName like concat('%',#{employeeName},'%'))
			</if>
			<if test="state!=-99">
				and emp.state=#{state}
			</if>
		</where>
	</sql>
	
	<select id="query" resultMap="Emp" parameterType="EmployeeQuery">
		select emp.*,r.id rid,r.name rname 
		from t_employee emp
		left join t_employee_role er  on(emp.id=er.employee_id)
		left join t_role r on(er.role_id=r.id)
		<include refid="whereSql"/>
		<if test="pageSize!=-1">
			limit #{start},#{pageSize}
		</if>
	</select>
	<!-- 获取总记录数 -->
	<select id="queryTotal" resultType="long" parameterType="EmployeeQuery">
		select count(emp.id)
		from t_employee emp
		left join t_role r on(emp.role_id=r.id)
		<include refid="whereSql"/>
	</select>
	
	<select id="checkLogin" resultType="Employee">
		select * from t_employee
		where username=#{username}
	</select>
	
	<select id="findByHql" parameterType="Employee" resultType="Employee">
		select * from t_employee where username=#{username} and password=#{password}
	</select>
	
	
</mapper>