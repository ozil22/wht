package com.huashidai.weihuotong.service.impl;

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import com.huashidai.weihuotong.domain.Store;
import com.huashidai.weihuotong.domain.User;
import com.huashidai.weihuotong.domain.UserImage;
import com.huashidai.weihuotong.exception.LogicException;
import com.huashidai.weihuotong.mapper.StoreMapper;
import com.huashidai.weihuotong.mapper.UserImageMapper;
import com.huashidai.weihuotong.mapper.UserMapper;
import com.huashidai.weihuotong.query.GoodsQuery;
import com.huashidai.weihuotong.service.IGoodsService;
import com.huashidai.weihuotong.service.IStoreService;
import com.huashidai.weihuotong.utils.FileUtil;
import com.huashidai.weihuotong.utils.StateCode;

@Service
public class StoreServiceImpl implements IStoreService {
	@Autowired
	private StoreMapper storeMapper;
	@Autowired
	private UserMapper userMapper;
	@Autowired
	private UserImageMapper userImageMapper;
	@Autowired
	private IGoodsService goodsService;

	@Override
	public Map<String, Object> enterStore(GoodsQuery goodsQuery) {
		Map<String, Object> map = new HashMap<String, Object>();
		Long storeId = goodsQuery.getStoreId();
		Store store = storeMapper.get(storeId);
		if (store == null) {
			throw new LogicException("店铺不存在！！", StateCode.NOTFOUND_STRORE);
		}
		User user = userMapper.getByStore(storeId);
		// 店铺用户图片
		ArrayList<Object> images = new ArrayList<Object>();
		List<UserImage> userImages = userImageMapper.getByUser(user.getId());
		for (UserImage userImage : userImages) {
			Map<String, Object> image = new HashMap<String, Object>();
			image.put("src", userImage.getSrc());
			image.put("id", userImage.getId());
			images.add(image);
		}
		map.put("userImages", images);
		//背景图
		String background = user.getBackground();
		map.put("background", background);
		// 店铺所有商品
		map.putAll(goodsService.queryMap(goodsQuery));
		return map;
	}

	@Override
	public void save(Store store) {
		storeMapper.save(store);
	}

	@Override
	public void update(Store store) {
		storeMapper.update(store);
	}

	@Override
	public void updateState(Store store) {
		storeMapper.updateState(store);
	}

	@Override
	public void delete(Long id) {
		storeMapper.delete(id);
	}

	@Override
	public Store get(Long id) {
		return storeMapper.get(id);
	}

	@Override
	public List<Store> getAll() {
		return storeMapper.getAll();
	}

	@Override
	public void updateHeadImage(MultipartFile image, Long storeId)
			throws IOException {
		String src = FileUtil.saveFile(image, "headImage");
		Store store = storeMapper.get(storeId);
		String headImage = store.getHeadImage();
		if (StringUtils.isNotBlank(headImage)) {
			FileUtil.deleteFile(headImage);
		}
		store.setHeadImage(src);
		storeMapper.update(store);
	}
}
