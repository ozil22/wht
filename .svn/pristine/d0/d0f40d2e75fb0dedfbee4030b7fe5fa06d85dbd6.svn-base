package com.huashidai.weihuotong.app;

/**
 * 广告相关的接口
 */
import java.io.IOException;
import java.text.ParseException;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import com.huashidai.weihuotong.domain.Promotion;
import com.huashidai.weihuotong.exception.LogicException;
import com.huashidai.weihuotong.query.PromotionQuery;
import com.huashidai.weihuotong.service.IPromotionOrderService;
import com.huashidai.weihuotong.service.IPromotionService;
import com.huashidai.weihuotong.utils.AppResult;

@Controller
@RequestMapping("/app")
public class PromotionAPP {
	@Autowired
	private IPromotionService promotionService;
	@Autowired
	private IPromotionOrderService promotionOrderService;

	/**
	 * 首页广告
	 * 
	 * @return
	 */
	@RequestMapping("/promotion")
	@ResponseBody
	public AppResult promotion(int page) {
		AppResult appResult = null;
		try {
			Map<String, Object> promotion = promotionService.getPromotion(page);
			appResult = new AppResult(promotion);
		} catch (Exception e) {
			e.printStackTrace();
			appResult = new AppResult();
		}
		return appResult;
	}

	/**
	 * 进入商品分类的广告
	 * 
	 * @param goodsTypeId
	 *            商品分类id
	 * @return
	 */
	@RequestMapping("/promotionOfType")
	@ResponseBody
	public AppResult promotionOfType(Long goodsTypeId, int page) {
		AppResult appResult = null;
		try {
			Map<String, Object> promotionOfType = promotionService.getPromotionOfType(goodsTypeId, page);
			appResult = new AppResult(promotionOfType);
		} catch (Exception e) {
			appResult = new AppResult();
		}
		return appResult;
	}

	/**
	 * 点击进入广告
	 * 
	 * @param promotionId
	 *            广告id
	 * @return
	 */
	@RequestMapping("/enterPromotion")
	@ResponseBody
	public AppResult enterPromotion(Long promotionId,Long userId) {
		AppResult appResult = null;
		try {
			Map<String, Object> data = promotionService
					.enterPromotion(promotionId,userId);
			appResult = new AppResult(data);
		} catch (LogicException e) {
			appResult = new AppResult(e.getMessage(), e.getErrorCode());
		}
		return appResult;
	}

	/**
	 * 点击广告,返回网页
	 * 
	 * @return
	 */
	@RequestMapping("/enterWebPage")
	public ModelAndView enterWebPage(Long cotentId) {
		String content = promotionService.getContent(cotentId);
		ModelAndView modelAndView = new ModelAndView();
		modelAndView.addObject("content", content);
		modelAndView.setViewName("/app/promotion");
		return modelAndView;
	}
	
	/**
	 * 去投放广告
	 * @param adPositionId 广告位id
	 * @return
	 */
	 
	@RequestMapping("/toBuyPromotion")
	@ResponseBody
	public AppResult toBuyPromotion(Long adPositionId){
		AppResult appResult = null;
		try {
			Map<String, Object> map = promotionOrderService.toBuyPromotion(adPositionId);
			appResult = new AppResult(map);
		} catch (LogicException e) {
			appResult = new AppResult(e.getMessage(), e.getErrorCode());
		}
		return appResult;
	}
	/**
	 * 投放广告 
	 * @param promotion 广告参数
	 * @param image 广告图片
	 * @return
	 * @throws IOException 
	 * @throws ParseException 
	 */
	
	@RequestMapping("/submitPromotionOrder")
	@ResponseBody
	public AppResult submitPromotionOrder(Promotion promotion,@RequestParam("image")  MultipartFile image,Long begin,Long end) throws ParseException, IOException {
		AppResult appResult = null;
		try {
			Map<String, Object> submitOrder = promotionOrderService.submitOrder(promotion,image,begin,end);
			appResult = new AppResult(submitOrder);
		} catch (LogicException e) {
			appResult = new AppResult(e.getMessage(), e.getErrorCode());
		}
		return appResult;
	}
	/**
	 * 查询店铺的广告
	 */
	
	@RequestMapping("/storePromotion")
	@ResponseBody
	public AppResult storePromotion(PromotionQuery qu){
		AppResult appResult = null;
		try {
			Map<String, Object> map = promotionService.queryMap(qu);
			appResult = new AppResult(map);
		} catch (LogicException e) {
			appResult = new AppResult();
		}
		return appResult;
	}
	/**
	 * 修改广告
	 */
	
	@RequestMapping("/updatePromotion")
	@ResponseBody
	public AppResult updatePromotion(Long promotionId,Integer contentType,Long contentId,@RequestParam("image")  MultipartFile image) throws ParseException, IOException{
		AppResult appResult = null;
		try {
			promotionService.update(promotionId,contentType,contentId,image);;
			appResult = new AppResult(null);
		} catch (LogicException e) {
			appResult = new AppResult();
		}
		return appResult;
	}

}
